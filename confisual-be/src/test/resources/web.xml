<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
		"/var/opt/nevisproxy/default/conf/web-app_2_3.dtd">
<!-- $Id$ -->

<web-app>
	<!-- sectoken configuration -->
	<context-param>
		<param-name>SectokenVerifierCert</param-name>
		<param-value>@SECTOKEN_VERIFIER_CERT@</param-value>
	</context-param>

	<!-- ********** filters ************** -->
	<!-- ********************************* -->

	<filter>
		<filter-name>CookieBasedSessionManagementFilter</filter-name>
		<filter-class>ch::nevis::nevisproxy::filter::session::SessionManagementFilter</filter-class>

		<init-param>
			<param-name>Servlet</param-name>
			<param-value>LocalSessionStoreServlet</param-value>
		</init-param>
		<init-param>
			<param-name>Identification</param-name>
			<param-value>Cookie</param-value>
		</init-param>
		<init-param>
			<param-name>Cookie.HttpOnly</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>Cookie.Name</param-name>
			<param-value>NPSession</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>AuthenticationFilter2FA</filter-name>
		<filter-class>ch::nevis::isiweb4::filter::auth::IdentityCreationFilter</filter-class>
		<init-param>
			<param-name>AuthenticationServlet</param-name>
			<param-value>NevisAuthConnector</param-value>
			<description>The configured name of the authentication servlet</description>
		</init-param>
		<init-param>
			<param-name>LoginRendererServlet</param-name>
			<param-value>BuiltinLoginRenderer</param-value>
			<description>The configured name of the login renderer
				servlet
			</description>
		</init-param>
		<init-param>
			<param-name>Realm</param-name>
			<param-value>TWOFASSO</param-value>
			<description>The realm of the authentication</description>
		</init-param>
		<init-param>
			<param-name>InactiveInterval</param-name>
			<param-value>7200</param-value>
			<description>
				The maximum interval between two request associated to
				the same session (if deleted or 0, value is taken from nevisAuth
				'Domain' element)
			</description>
		</init-param>
		<init-param>
			<param-name>EntryPointID</param-name>
			<param-value>@HOSTNAME@</param-value>
			<description>The entry point id (will be part of the sectoken)</description>
		</init-param>
		<init-param>
			<param-name>DelegateSecToken</param-name>
			<param-value>true</param-value>
			<description>
				Do not propagate secToken, will be done using HTTP Authorization (DelegationFilter)
			</description>
		</init-param>
		<init-param>
			<param-name>StoreInterceptedRequest</param-name>
			<param-value>false</param-value>
			<description>
				We do not use transparent login interception and allow
				POST interception with large amount of data
			</description>
		</init-param>
		<!-- <init-param>
			<param-name>ClientCert</param-name>
			<param-value>optional:2:/nevisidm/cert</param-value>
			<description>Request cert from client</description>
		</init-param>
		<init-param>
			<param-name>CheckAlwaysClientCert</param-name>
			<param-value>false</param-value>
			<description>
				If session is tracked with cookie and SSL session is lost, we keep on going
			</description>
		</init-param> -->
	</filter>

	<filter>
		<filter-name>TwoFARoleFilter</filter-name>
		<filter-class>ch::nevis::isiweb4::filter::auth::SecurityRoleFilter</filter-class>
		<init-param>
			<param-name>RolesRequired</param-name>
			<param-value>auth.strong</param-value>
		</init-param>
		<init-param>
			<param-name>DynamicRoleAcquire</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>AuthenticationServlet</param-name>
			<param-value>NevisAuthConnector</param-value>
		</init-param>
		<init-param>
			<param-name>LoginRendererServlet</param-name>
			<param-value>BuiltinLoginRenderer</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>AdminRoleFilter</filter-name>
		<filter-class>ch::nevis::isiweb4::filter::auth::SecurityRoleFilter</filter-class>
		<init-param>
			<param-name>RolesRequired</param-name>
			<param-value>DemoApp.Admin</param-value>
		</init-param>
		<init-param>
			<param-name>AuthenticationServlet</param-name>
			<param-value>NevisAuthConnector</param-value>
		</init-param>
		<init-param>
			<param-name>LoginRendererServlet</param-name>
			<param-value>BuiltinLoginRenderer</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>SecTokenBasicAuthDelegation</filter-name>
		<filter-class>ch::nevis::isiweb4::filter::delegation::DelegationFilter</filter-class>
		<init-param>
			<param-name>DelegateBasicAuth</param-name>
			<param-value>
				AUTH:user.auth.UserId
				AUTH:user.auth.SecToken
			</param-value>
			<description>HTTP header propagation to content providers</description>
		</init-param>
	</filter>

	<!-- ********** filter mapping ************** -->
	<!-- **************************************** -->

	<!-- End authentication filter mapping TWOFASSO -->
	<filter-mapping>
		<filter-name>CookieBasedSessionManagementFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Begin authentication filter mapping for sso -->
	<filter-mapping>
		<filter-name>AuthenticationFilter2FA</filter-name>
		<url-pattern>/sso/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SecTokenBasicAuthDelegation</filter-name>
		<url-pattern>/sso/*</url-pattern>
	</filter-mapping>

	<!-- Begin authentication filter mapping for 2fa/mailtan -->
	<filter-mapping>
		<filter-name>AuthenticationFilter2FA</filter-name>
		<url-pattern>/2fa/mailtan/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>TwoFARoleFilter</filter-name>
		<url-pattern>/2fa/mailtan/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SecTokenBasicAuthDelegation</filter-name>
		<url-pattern>/2fa/mailtan/*</url-pattern>
	</filter-mapping>

	<!-- Begin authentication filter mapping for 2fa/oath -->
	<filter-mapping>
		<filter-name>AuthenticationFilter2FA</filter-name>
		<url-pattern>/2fa/oath/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>TwoFARoleFilter</filter-name>
		<url-pattern>/2fa/oath/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SecTokenBasicAuthDelegation</filter-name>
		<url-pattern>/2fa/oath/*</url-pattern>
	</filter-mapping>

	<!-- Begin authentication filter mapping for protected/mailtan-->
	<filter-mapping>
		<filter-name>AuthenticationFilter2FA</filter-name>
		<url-pattern>/protected/mailtan/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>TwoFARoleFilter</filter-name>
		<url-pattern>/protected/mailtan/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>AdminRoleFilter</filter-name>
		<url-pattern>/protected/mailtan/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SecTokenBasicAuthDelegation</filter-name>
		<url-pattern>/protected/mailtan/*</url-pattern>
	</filter-mapping>

	<!-- Begin authentication filter mapping for protected/oath-->
	<filter-mapping>
		<filter-name>AuthenticationFilter2FA</filter-name>
		<url-pattern>/protected/oath/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>TwoFARoleFilter</filter-name>
		<url-pattern>/protected/oath/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>AdminRoleFilter</filter-name>
		<url-pattern>/protected/oath/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SecTokenBasicAuthDelegation</filter-name>
		<url-pattern>/protected/oath/*</url-pattern>
	</filter-mapping>

	<!-- ********** session listener ************** -->
	<!-- ****************************************** -->
	<listener>
		<listener-class>ch::nevis::isiweb4::listener::SessionListener</listener-class>
	</listener>

	<!-- **************** servlets ************************************ -->
	<!-- ************************************************************** -->

	<servlet>
		<servlet-name>LocalSessionStoreServlet</servlet-name>
		<servlet-class>ch::nevis::nevisproxy::servlet::cache::local::LocalSessionStoreServlet</servlet-class>
		<init-param>
			<param-name>MemorySize</param-name>
			<param-value>1073741824</param-value>
		</init-param>
		<init-param>
			<param-name>MaxInactiveInterval</param-name>
			<param-value>120</param-value>
		</init-param>
		<init-param>
			<param-name>MaxLifetime</param-name>
			<param-value>7200</param-value>
		</init-param>
	</servlet>

	<servlet>
		<servlet-name>NevisAuthConnector</servlet-name>
		<servlet-class>ch::nevis::isiweb4::servlet::connector::soap::esauth4::Esauth4ConnectorServlet</servlet-class>
		<init-param>
			<param-name>TargetURI</param-name>
			<param-value>/nevisauth/services/AuthenticationService</param-value>
		</init-param>
		<init-param>
			<param-name>Encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>Transport.InetAddress</param-name>
			<param-value>@HOSTNAME@:8995</param-value>
		</init-param>
		<init-param>
			<param-name>Transport.ConnectTimeout</param-name>
			<param-value>45000</param-value>
			<description>
				msec, nevisAuth startup in tomcat5 takes some time and
				listener is open too early
			</description>
		</init-param>
		<init-param>
			<param-name>Transport.RequestTimeout</param-name>
			<param-value>90000</param-value>
			<description>
				msec, 1/3 of this timeout is used to poll nevisAuth for
				terminated session.
			</description>
		</init-param>
		<init-param>
			<param-name>Transport.SSLProtocol</param-name>
			<param-value>all-SSLv2</param-value>
		</init-param>
		<init-param>
			<param-name>Transport.SSLClientCertificateFile</param-name>
			<param-value>@SSL_CLIENT_CERTIFICATE_FILE@</param-value>
		</init-param>
		<init-param>
			<param-name>Transport.SSLCACertificateFile</param-name>
			<param-value>@SSL_CA_CERTIFICATE_FILE@</param-value>
		</init-param>
		<init-param>
			<param-name>Transport.SSLCheckPeerHostname</param-name>
			<param-value>false</param-value>
		</init-param>
	</servlet>

	<servlet>
		<servlet-name>BuiltinLoginRenderer</servlet-name>
		<servlet-class>ch::nevis::isiweb4::servlet::rendering::LoginRendererServlet</servlet-class>
		<init-param>
			<param-name>RenderingProvider</param-name>
			<param-value>localTemplate:/var/opt/nevisproxy/default/template/loginrenderer</param-value>
		</init-param>
	</servlet>


	<!-- DefaultServlet -->
	<servlet>
		<servlet-name>NevisDefaultServlet</servlet-name>
		<servlet-class>ch::nevis::isiweb4::servlet::defaults::DefaultServlet</servlet-class>
		<init-param>
			<param-name>EntryURI</param-name>
			<param-value>/index.html</param-value>
			<description>The URL to which the client is redirected</description>
		</init-param>
	</servlet>


	<servlet>
		<servlet-name>Servlet2FA</servlet-name>
		<servlet-class>ch::nevis::isiweb4::servlet::connector::http::HttpConnectorServlet</servlet-class>
		<init-param>
			<param-name>InetAddress</param-name>
			<param-value>@HOSTNAME@:12001</param-value>
		</init-param>
		<init-param>
			<param-name>MappingType</param-name>
			<param-value>pathinfo</param-value>
		</init-param>
		<init-param>
			<param-name>URIPrefix</param-name>
			<param-value>/demoapp/rest</param-value>
		</init-param>
		<!-- <init-param>
			<param-name>AllowMethods</param-name>
			<param-value>POST, GET</param-value>
		</init-param> -->
		<init-param>
			<param-name>CookieManager</param-name>
			<param-value>store:^.*$</param-value>
		</init-param>
	</servlet>

	<!-- END AUTH CONFIG -->

	<!-- ********** servlet mapping ************** -->
	<!-- ***************************************** -->

	<!-- handles all hits, not mapped to something else -->
	<servlet-mapping>
		<servlet-name>NevisDefaultServlet</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Servlet2FA</servlet-name>
		<url-pattern>/sso/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Servlet2FA</servlet-name>
		<url-pattern>/2fa/mailtan/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Servlet2FA</servlet-name>
		<url-pattern>/2fa/oath/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Servlet2FA</servlet-name>
		<url-pattern>/protected/mailtan/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Servlet2FA</servlet-name>
		<url-pattern>/protected/oath/*</url-pattern>
	</servlet-mapping>
	<!-- ********** mime-type mapping ************** -->
	<!-- ******************************************* -->

	<mime-mapping>
		<extension>ai</extension>
		<mime-type>application/postscript</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>aim</extension>
		<mime-type>application/x-aim</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>art</extension>
		<mime-type>image/x-jg</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>ico</extension>
		<mime-type>image/x-icon</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>bcpio</extension>
		<mime-type>application/x-bcpio</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>bin</extension>
		<mime-type>application/octet-stream</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>bmp</extension>
		<mime-type>image/bmp</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>body</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>cer</extension>
		<mime-type>application/x-x509-ca-cert</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>class</extension>
		<mime-type>application/java</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>css</extension>
		<mime-type>text/css</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>dib</extension>
		<mime-type>image/bmp</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>doc</extension>
		<mime-type>application/msword</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>dtd</extension>
		<mime-type>text/plain</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>eps</extension>
		<mime-type>application/postscript</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>exe</extension>
		<mime-type>application/octet-stream</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>gif</extension>
		<mime-type>image/gif</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>gtar</extension>
		<mime-type>application/x-gtar</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>gz</extension>
		<mime-type>application/x-gzip</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>htm</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>html</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>ief</extension>
		<mime-type>image/ief</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>jar</extension>
		<mime-type>application/java-archive</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>java</extension>
		<mime-type>text/plain</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>jpe</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>jpeg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>jpg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>js</extension>
		<mime-type>text/javascript</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>jspf</extension>
		<mime-type>text/plain</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>latex</extension>
		<mime-type>application/x-latex</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>mpega</extension>
		<mime-type>audio/x-mpeg</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>mpg</extension>
		<mime-type>video/mpeg</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>pbm</extension>
		<mime-type>image/x-portable-bitmap</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>pct</extension>
		<mime-type>image/pict</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>pdf</extension>
		<mime-type>application/pdf</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>pgm</extension>
		<mime-type>image/x-portable-graymap</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>pic</extension>
		<mime-type>image/pict</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>pict</extension>
		<mime-type>image/pict</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>png</extension>
		<mime-type>image/png</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>pnm</extension>
		<mime-type>image/x-portable-anymap</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>ppm</extension>
		<mime-type>image/x-portable-pixmap</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>ps</extension>
		<mime-type>application/postscript</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>qti</extension>
		<mime-type>image/x-quicktime</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>qtif</extension>
		<mime-type>image/x-quicktime</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>ras</extension>
		<mime-type>image/x-cmu-raster</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>rgb</extension>
		<mime-type>image/x-rgb</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>swf</extension>
		<mime-type>application/x-shockwave-flash</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>tar</extension>
		<mime-type>application/x-tar</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>tif</extension>
		<mime-type>image/tiff</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>tiff</extension>
		<mime-type>image/tiff</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>txt</extension>
		<mime-type>text/plain</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>xbm</extension>
		<mime-type>image/x-xbitmap</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>xml</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>xpm</extension>
		<mime-type>image/x-xpixmap</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>xsl</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>svg</extension>
		<mime-type>image/svg+xml</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>Z</extension>
		<mime-type>application/x-compress</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>z</extension>
		<mime-type>application/x-compress</mime-type>
	</mime-mapping>

	<mime-mapping>
		<extension>zip</extension>
		<mime-type>application/zip</mime-type>
	</mime-mapping>

	<!-- ********** error-page mapping ************** -->
	<!-- ******************************************** -->

	<error-page>
		<error-code>403</error-code>
		<location>/errorpages/forbidden.html</location>
	</error-page>

	<error-page>
		<error-code>404</error-code>
		<location>/errorpages/page_not_found.html</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/errorpages/server_error.html</location>
	</error-page>

	<error-page>
		<error-code>502</error-code>
		<location>/errorpages/gateway_error.html</location>
	</error-page>
</web-app>

